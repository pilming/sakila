<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.CustomerMapper">
	<update id="updateCustomerActiveByscheduler">	
		UPDATE customer c, (SELECT customer_id, max(rental_date), DATEDIFF(NOW(), max(rental_date))
	          	            FROM rental
		                  	GROUP BY customer_id
		                    HAVING DATEDIFF(NOW(), max(rental_date)) > 365) A
		SET c.active = 0
		WHERE c.customer_id = A.customer_id
	</update>
	<select id="selectCustomerList"
			parameterType="java.util.Map"
			resultType="java.util.Map">
		SELECT 
			c.customer_id customerId,
			c.store_id storeId,
			CONCAT(c.first_name,' ',c.last_name) name,
			c.email email,
			CASE
			WHEN c.active = 1 THEN '활동'
			ELSE '휴면'
			END active
		FROM 
			customer c
		<where>
			<if test="storeId != 0">
				AND c.store_id = #{storeId}
			</if>
			<if test="searchWord!=null and searchWord != ''">
				AND CONCAT(c.first_name,' ',c.last_name) LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		LIMIT #{page.beginRow}, #{page.rowPerPage}
	</select>
	<select id="selectCustomerTotal"
			parameterType="java.util.Map"
			resultType="Integer">
		SELECT 
			COUNT(*) 
		FROM 
			customer c
		<where>
			<if test="storeId != 0">
				AND store_id = #{storeId}
			</if>
			<if test="searchWord !=null and searchWord != ''">
				AND CONCAT(c.first_name,' ',c.last_name) LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
	</select>
	<select id="selectCustomerOne"
			parameterType="int"
			resultType="java.util.Map">
		SELECT 
			c.customer_id customerId,
			c.store_id storeId,
			CONCAT(c.first_name, ' ', c.last_name) name,
			c.email email,
			a.address address,
			a.district district,
			CASE
			WHEN c.active = 1 THEN '활동'
			ELSE '휴면'
			END active,
			c.create_date createDate
		FROM 
			customer c
			JOIN address a ON c.address_id = a.address_id
		WHERE c.customer_id = #{customerId}
	</select>
	<select id = "selectPaymentByCustomerId"
			parameterType="int"
			resultType="Double">
		SELECT 
			SUM(p.amount) total
		 FROM 
		 	payment p
		 	WHERE p.customer_id = #{customerId}
		GROUP BY p.customer_id
	</select>
</mapper>