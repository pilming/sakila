<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.ActorMapper">
	<insert id="insertActor" parameterType="com.gd.sakila.vo.Actor">
		INSERT INTO actor(
			first_name,
			last_name
		) VALUES (
			UPPER(#{firstName}),
			UPPER(#{lastName})
		)
	</insert>
	
	<select id ="selectActorList" 
			parameterType="java.util.Map"
			resultType="com.gd.sakila.vo.Actor">
		SELECT
			actor_id actorId,
			first_name firstName,
			last_name lastName
			<!--CONCAT(first_name, ' ', last_name) name -->
		FROM actor
		<!-- ui적용하면서 간소화 -->
		<!-- 
		<where>
			<if test="searchWord != null and searchWord!= ''">
				AND (first_name LIKE CONCAT('%',#{searchWord},'%') OR last_name LIKE CONCAT('%',#{searchWord},'%'))
			</if>
		</where>
		LIMIT #{page.beginRow}, #{page.rowPerPage}  -->
	</select>
	<select id="selectActorTotal" 
			parameterType="String" 
			resultType="Integer">
		SELECT 
			COUNT(*)
		FROM
			actor
		<where>
			<if test="searchWord != null and searchWord!= ''">
				AND (first_name LIKE CONCAT('%',#{searchWord},'%') OR last_name LIKE CONCAT('%',#{searchWord},'%'))
			</if>
		</where>
	</select>
	<select id="selectActorOne"
			parameterType="int"
			resultType="java.util.Map">
		SELECT 
			fa.actor_id actorId,
			CONCAT(a.first_name, ' ',a.last_name) name,
			fa.film_id filmId, 
			f.title title, 
			c.name category
		FROM 
			film_actor fa
		JOIN actor a
			ON fa.actor_id = a.actor_id
		JOIN film f 
			ON fa.film_id = f.film_id
		JOIN film_category fc 
			ON fa.film_id = fc.film_id
		JOIN category c 
			ON fc.category_id = c.category_id
		WHERE fa.actor_id = #{actorId}
		ORDER BY c.name
	</select>
</mapper>